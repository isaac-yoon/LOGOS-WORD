{"version":3,"sources":["webpack://test/./public/javascripts/game.js","webpack://test/./public/javascripts/index.js","webpack://test/./public/javascripts/verses.js","webpack://test/webpack/bootstrap","webpack://test/webpack/runtime/define property getters","webpack://test/webpack/runtime/hasOwnProperty shorthand","webpack://test/webpack/runtime/make namespace object","webpack://test/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,CAA8B;;AAE9B;AACA;AACA,kBAAkB,4CAAM;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;AC3FnB,CAA0B;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0CAAI;;AAEzB;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;;;;;;;ACdD;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,E;;;;;;UCLrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["import verses from './verses';\n\nclass Game {\n  constructor(ctx, canvas, input, pageLayout) {\n    this.verses = verses;\n    this.pageLayout = pageLayout;\n    this.ctx = ctx;\n    this.level = 1;\n    this.input = input;\n    this.canvas = canvas;\n\n    // bindings\n    this.displayVerse = this.displayVerse.bind(this);\n    this.displayHiddenVerse = this.displayHiddenVerse.bind(this);\n    this.checkInputWithHiddenWord = this.checkInputWithHiddenWord.bind(this);\n    this.start = this.start.bind(this);\n  };\n\n  displayVerse() {\n    let verse = this.verses[this.level];\n    // let verseSplit = verse.split(' ');\n    // verseSplit[4] = '-------';\n    // verseSplit = verseSplit.join(' ');\n    this.ctx.font = '12px serif';\n    this.ctx.fillText(verse, 10, 50);\n    // setTimeout(function() {\n    //   this.ctx.fillText(verseSplit, 10, 50);\n    // }, 3000);\n  };\n\n  displayHiddenVerse() {\n    // clear previous canvas\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    let verse = this.verses[this.level];\n    let verseSplit = verse.split(' ');\n\n    // save hidden word\n    let array = [];\n    array.push(verseSplit[4]);\n\n    // add dashes to word that was hidden\n    verseSplit[4] = '-------';\n\n    // rejoin\n    verseSplit = verseSplit.join(' ');\n\n    // write on canvas hidden\n    this.ctx.font = '12px serif';\n    this.ctx.fillText(verseSplit, 10, 50);\n\n    this.checkInputWithHiddenWord(array[0]);\n  };\n\n  // function that goes into divisible by number \n  // saves values to a array\n\n  // another function that changes indexes to dashes that takes in array\n  // \n  // write out all helper functions\n\n  checkInputWithHiddenWord(hiddenWord) {\n    if (e.keyCode === 32 || e.keyCode === 13) {\n      let userGuess = this.input.value;\n      \n      // word matches\n      if (userGuess === hiddenWord) {\n        this.displayHiddenVerse()\n        // start new level\n        this.level += 1\n\n        // needs to display new level hidden verse\n        // and create a loop\n      }\n    }\n  };\n\n  start() {\n    // remove event listeners when game starts\n    this.canvas.removeEventListener('click', this.start);\n    this.pageLayout.removeEventListener('keypress', this.start);\n\n    // display verse\n    this.displayVerse();\n\n    // display hidden verse\n    setTimeout(this.displayHiddenVerse, 3000);\n  };\n\n};\n\nexport default Game;","import Game from './game';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    let canvas = document.getElementById('word-canvas');\n    let ctx = canvas.getContext('2d');\n    let pageLayout = document.getElementById('page-layout');\n\n    const input = document.getElementById('word-input');\n    // create a new game\n    const game = new Game(ctx, canvas, input, pageLayout);\n\n    // allow user to click or press any key to start game\n    canvas.addEventListener('click', game.start);\n    pageLayout.addEventListener('keypress', game.start);\n});","const verses = {\n  1 : 'In the beginning God created the heavens and the earth.',\n  2 : 'In the beginning was the Word, and the Word was with God, and the Word was God',\n};\n\nexport default verses;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./public/javascripts/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}